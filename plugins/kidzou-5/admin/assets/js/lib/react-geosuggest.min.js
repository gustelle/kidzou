!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Geosuggest=t()}}(function(){return function t(e,s,i){function n(o,a){if(!s[o]){if(!e[o]){var r="function"==typeof require&&require;if(!a&&r)return r(o,!0);if(u)return u(o,!0);var g=new Error("Cannot find module '"+o+"'");throw g.code="MODULE_NOT_FOUND",g}var c=s[o]={exports:{}};e[o][0].call(c.exports,function(t){var s=e[o][1][t];return n(s?s:t)},c,c.exports,t,e,s,i)}return s[o].exports}for(var u="function"==typeof require&&require,o=0;o<i.length;o++)n(i[o]);return n}({1:[function(t,e){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(t[i]=s[i])}return t},n=window.React,u=s(n),o=t("./GeosuggestItem"),a=s(o),r=t("./input-attributes"),g=s(r),c=u["default"].createClass({displayName:"Geosuggest",getDefaultProps:function(){return{fixtures:[],initialValue:"",placeholder:"Search places",disabled:!1,className:"",inputClassName:"",location:null,radius:null,bounds:null,country:null,types:null,googleMaps:null,onSuggestSelect:function(){},onFocus:function(){},onBlur:function(){},onChange:function(){},skipSuggest:function(){},getSuggestLabel:function(t){return t.description},autoActivateFirstSuggest:!1}},getInitialState:function(){return{isMounted:!1,isSuggestsHidden:!0,userInput:this.props.initialValue,activeSuggest:null,suggests:[]}},componentWillReceiveProps:function(t){this.props.initialValue!==t.initialValue&&this.setState({userInput:t.initialValue})},componentDidMount:function(){this.setInputValue(this.props.initialValue);var t=this.props.googleMaps||window.google&&window.google.maps||this.googleMaps;t&&(this.googleMaps=t,this.autocompleteService=new t.places.AutocompleteService,this.geocoder=new t.Geocoder,this.setState({isMounted:!0}))},componentWillUnmount:function(){this.setState({isMounted:!1})},setInputValue:function(t){this.setState({userInput:t})},onInputChange:function(){var t=this,e=this.refs.geosuggestInput.value;this.setState({userInput:e},function(){t.showSuggests(),t.props.onChange(e)})},onFocus:function(){this.props.onFocus(),this.showSuggests()},update:function(t){this.setState({userInput:t}),this.props.onChange(t)},clear:function(){var t=this;this.setState({userInput:""},function(){return t.hideSuggests()})},searchSuggests:function(){var t=this;if(!this.state.userInput)return void this.updateSuggests();var e={input:this.state.userInput};this.props.location&&(e.location=this.props.location),this.props.radius&&(e.radius=this.props.radius),this.props.bounds&&(e.bounds=this.props.bounds),this.props.types&&(e.types=this.props.types),this.props.country&&(e.componentRestrictions={country:this.props.country}),this.autocompleteService.getPlacePredictions(e,function(e){t.updateSuggests(e),t.props.autoActivateFirstSuggest&&t.activateSuggest("next")})},updateSuggests:function(t){var e=this;t||(t=[]);var s=[],i=new RegExp(this.state.userInput,"gim"),n=this.props.skipSuggest;this.props.fixtures.forEach(function(t){!n(t)&&t.label.match(i)&&(t.placeId=t.label,s.push(t))}),t.forEach(function(t){n(t)||s.push({label:e.props.getSuggestLabel(t),placeId:t.place_id})}),this.setState({suggests:s})},showSuggests:function(){this.searchSuggests(),this.setState({isSuggestsHidden:!1})},hideSuggests:function(){var t=this;this.props.onBlur(),setTimeout(function(){t.state&&t.state.isMounted&&t.setState({isSuggestsHidden:!0})},100)},onInputKeyDown:function(t){switch(t.which){case 40:t.preventDefault(),this.activateSuggest("next");break;case 38:t.preventDefault(),this.activateSuggest("prev");break;case 13:t.preventDefault(),this.selectSuggest(this.state.activeSuggest);break;case 9:this.selectSuggest(this.state.activeSuggest);break;case 27:this.hideSuggests()}},activateSuggest:function(t){if(this.state.isSuggestsHidden)return void this.showSuggests();var e=this.state.suggests.length-1,s="next"===t,i=null,n=0,u=0;for(u;e>=u;u++)this.state.suggests[u]===this.state.activeSuggest&&(n=s?u+1:u-1);this.state.activeSuggest||(n=s?0:e),n>=0&&e>=n&&(i=this.state.suggests[n]),this.setState({activeSuggest:i})},selectSuggest:function(t){return t||(t={label:this.state.userInput}),this.setState({isSuggestsHidden:!0,userInput:t.label}),t.location?void this.props.onSuggestSelect(t):void this.geocodeSuggest(t)},geocodeSuggest:function(t){var e=this;this.geocoder.geocode({address:t.label},function(s,i){if(i===e.googleMaps.GeocoderStatus.OK){var n=s[0],u=n.geometry.location;t.gmaps=n,t.location={lat:u.lat(),lng:u.lng()},e.props.onSuggestSelect(t)}})},render:function(){var t=this,e={};return g["default"].forEach(function(s){t.props[s]&&(e[s]=t.props[s])}),u["default"].createElement("div",{className:"geosuggest "+this.props.className,onClick:this.onClick},u["default"].createElement("input",i({className:"geosuggest__input "+this.props.inputClassName,ref:"geosuggestInput",type:"text"},e,{value:this.state.userInput,onKeyDown:this.onInputKeyDown,onChange:this.onInputChange,onFocus:this.onFocus,onBlur:this.hideSuggests})),u["default"].createElement("ul",{className:this.getSuggestsClasses()},this.getSuggestItems()))},getSuggestItems:function(){return this.state.suggests.map(function(t){var e=this.state.activeSuggest&&t.placeId===this.state.activeSuggest.placeId;return u["default"].createElement(a["default"],{key:t.placeId,suggest:t,isActive:e,onSuggestSelect:this.selectSuggest})}.bind(this))},getSuggestsClasses:function(){var t="geosuggest__suggests";return t+=this.state.isSuggestsHidden?" geosuggest__suggests--hidden":""}});e.exports=c},{"./GeosuggestItem":2,"./input-attributes":3}],2:[function(t,e){"use strict";function s(t){return t&&t.__esModule?t:{"default":t}}var i=window.React,n=s(i),u=n["default"].createClass({displayName:"GeosuggestItem",getDefaultProps:function(){return{isActive:!1,suggest:{label:""},onSuggestSelect:function(){}}},onClick:function(t){t.preventDefault(),this.props.onSuggestSelect(this.props.suggest)},render:function(){return n["default"].createElement("li",{className:this.getSuggestClasses(),onClick:this.onClick},this.props.suggest.label)},getSuggestClasses:function(){var t=this.props.suggest.className,e="geosuggest-item";return e+=this.props.isActive?" geosuggest-item--active":"",e+=t?" "+t:""}});e.exports=u},{}],3:[function(t,e,s){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s["default"]=["autocapitalize","autocomplete","autocorrect","autofocus","autosave","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","id","inputmode","maxlength","maxlength","name","pattern","placeholder","readonly","required","selectionDirection","size","spellcheck","tabindex"],e.exports=s["default"]},{}]},{},[1])(1)});